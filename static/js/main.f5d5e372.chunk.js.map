{"version":3,"sources":["logo.svg","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","keygen","require","RTCMultiConnection","getHTMLMediaElement","DetectRTC","Transition","React","forwardRef","props","ref","Slide","direction","SlideTransition","Home","useState","create","join","open","setOpen","err","setErr","key","setKey","history","useHistory","useRouteMatch","url","undefined","transition","setTransition","refCreateStreaming","useRef","connection","Page","videosContainer","document","getElementById","console","log","onstream","event","existing","streamid","parentNode","removeChild","mediaElement","removeAttribute","muted","volume","video","createElement","setAttributeNode","createAttribute","e","setAttribute","type","srcObject","stream","width","window","innerWidth","title","userid","buttons","showOnMouseEnter","appendChild","setTimeout","media","play","id","onstreamended","sessionid","isInitiator","alert","location","reload","onMediaError","message","audioInputDevices","length","secondaryMic","deviceId","mediaConstraints","audio","socketURL","socketMessageEvent","session","screen","oneway","iceServers","handleClickOpen","prop","handleClickcCreate","push","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","handleClose","KeyChange","target","value","useEffect","hash","replace","exact","path","style","display","justifyContent","alignItems","height","backgroundColor","color","fontWeight","fontVariant","fontSize","marginRight","Button","size","variant","margin","startIcon","onClick","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","TextField","label","onChange","_key","_","DialogActions","Snackbar","position","top","FacebookShareButton","quote","className","FacebookIcon","round","StartPage","status","from","to","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f5d5e372.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment, useState, useRef, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { FacebookShareButton, FacebookIcon } from 'react-share';\r\nimport './lib/getHTMLMediaElement.css';\r\n\r\nconst keygen = require(\"keygenerator\");\r\nconst RTCMultiConnection = require('rtcmulticonnection')\r\nconst getHTMLMediaElement = require('./lib/getHTMLMediaElement');\r\nconst DetectRTC = require('detectrtc');\r\n\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nfunction Home() {\r\n    const [open, setOpen] = React.useState({\r\n        create: false,\r\n        join: false\r\n    });\r\n    const [err, setErr] = useState(false)\r\n    const [key, setKey] = useState(\"\")\r\n    const history = useHistory()\r\n    let { url } = useRouteMatch();\r\n\r\n    const [transition, setTransition] = React.useState(undefined);\r\n\r\n    const refCreateStreaming = useRef(null);\r\n\r\n    var connection = new RTCMultiConnection();\r\n\r\n    connection.socketURL = 'https://server-streaming.herokuapp.com/';\r\n\r\n    connection.socketMessageEvent = 'screen-sharing-demo';\r\n\r\n    connection.session = {\r\n        screen: true,\r\n        oneway: true\r\n    };\r\n\r\n    connection.iceServers = [{\r\n        'urls': [\r\n            'stun:stun.l.google.com:19302',\r\n            'stun:stun1.l.google.com:19302',\r\n            'stun:stun2.l.google.com:19302',\r\n            'stun:stun.l.google.com:19302?transport=udp',\r\n        ]\r\n    }];\r\n\r\n\r\n    function Page() {\r\n        // const {key_streaming} = useParams()\r\n\r\n        // useEffect(()=> {\r\n        //     var hashString = window.location.hash.replace('#', '');\r\n        //     if (hashString.length && hashString.indexOf('comment-') == 0) {\r\n        //         hashString = '';\r\n        //     }\r\n\r\n        //     var roomid = key;\r\n        //     if (!roomid && hashString.length) {\r\n        //         // roomid = hashString;\r\n        //         connection.sdpConstraints.mandatory = {\r\n        //             OfferToReceiveAudio: false,\r\n        //             OfferToReceiveVideo: true\r\n        //         };\r\n        //         connection.join(hashString);\r\n        //     }\r\n\r\n        //     console.log(hashString);\r\n\r\n\r\n        // })\r\n\r\n        connection.videosContainer = document.getElementById('videos-container');\r\n\r\n        console.log(document.getElementById('videos-container'));\r\n\r\n        connection.onstream = function (event) {\r\n            var existing = document.getElementById(event.streamid);\r\n            if (existing && existing.parentNode) {\r\n                existing.parentNode.removeChild(existing);\r\n            }\r\n\r\n            event.mediaElement.removeAttribute('src');\r\n            event.mediaElement.removeAttribute('srcObject');\r\n            event.mediaElement.muted = true;\r\n            event.mediaElement.volume = 0;\r\n\r\n            var video = document.createElement('video');\r\n\r\n            try {\r\n                video.setAttributeNode(document.createAttribute('autoplay'));\r\n                video.setAttributeNode(document.createAttribute('playsinline'));\r\n            } catch (e) {\r\n                video.setAttribute('autoplay', true);\r\n                video.setAttribute('playsinline', true);\r\n            }\r\n\r\n            if (event.type === 'local') {\r\n                video.volume = 0;\r\n                try {\r\n                    video.setAttributeNode(document.createAttribute('muted'));\r\n                } catch (e) {\r\n                    video.setAttribute('muted', true);\r\n                }\r\n            }\r\n            video.srcObject = event.stream;\r\n\r\n            var width = window.innerWidth - 80;\r\n            var mediaElement = getHTMLMediaElement(video, {\r\n                title: event.userid,\r\n                buttons: ['full-screen'],\r\n                width: width,\r\n                showOnMouseEnter: false\r\n            });\r\n\r\n            connection.videosContainer.appendChild(mediaElement);\r\n\r\n            setTimeout(function () {\r\n                mediaElement.media.play();\r\n            }, 5000);\r\n\r\n            mediaElement.id = event.streamid;\r\n        };\r\n\r\n        connection.onstreamended = function (event) {\r\n            var mediaElement = document.getElementById(event.streamid);\r\n            if (mediaElement) {\r\n                mediaElement.parentNode.removeChild(mediaElement);\r\n\r\n                if (event.userid === connection.sessionid && !connection.isInitiator) {\r\n                    alert('Broadcast is ended. We will reload this page to clear the cache.');\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.onMediaError = function (e) {\r\n            if (e.message === 'Concurrent mic process limit.') {\r\n                if (DetectRTC.audioInputDevices.length <= 1) {\r\n                    alert('Please select external microphone. Check github issue number 483.');\r\n                    return;\r\n                }\r\n\r\n                var secondaryMic = DetectRTC.audioInputDevices[1].deviceId;\r\n                connection.mediaConstraints.audio = {\r\n                    deviceId: secondaryMic\r\n                };\r\n\r\n                connection.join(connection.sessionid);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div id=\"videos-container\" ></div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleClickOpen = (prop) => (event) => {\r\n        setOpen({ ...open, [prop]: true });\r\n\r\n    };\r\n\r\n    const handleErrClose = () => {\r\n        setErr(false);\r\n    }\r\n\r\n    const handleClickcCreate = (prop, Transition) => (event) => {\r\n        setOpen({ ...open, [prop]: true });\r\n        if (key !== \"\") {\r\n            history.push(`home/streaming`)\r\n            switch (prop) {\r\n                case \"create\":\r\n                    connection.open(key, function () {\r\n                        // showRoomURL(connection.sessionid);\r\n                        console.log('open room');\r\n\r\n                    });\r\n                    break;\r\n                case \"join\":\r\n                    connection.sdpConstraints.mandatory = {\r\n                        OfferToReceiveAudio: false,\r\n                        OfferToReceiveVideo: true\r\n                    };\r\n                    connection.join(key);\r\n                    break;\r\n                default: return (<Fragment></Fragment>)\r\n                    break;\r\n            }\r\n\r\n        } else {\r\n            setTransition(() => Transition);\r\n            setErr(true);\r\n        }\r\n\r\n    };\r\n\r\n    const handleClose = (prop) => (event) => {\r\n        setOpen({ ...open, [prop]: false });\r\n    };\r\n\r\n    const KeyChange = (event) => {\r\n\r\n        setKey(event.target.value)\r\n\r\n\r\n    }\r\n\r\n\r\n    function GenerateKey() {\r\n        let _key = keygen._();\r\n        setKey(_key)\r\n        // console.log(_key);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(window.location.hash.replace('#', ''));\r\n        if (window.location.hash.replace('#', '') !== '') {\r\n            setKey(window.location.hash.replace('#', ''))\r\n            setOpen({ ...open, join: true })\r\n        }\r\n    }, [window.location.hash.replace('#', '')])\r\n\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route exact path={`/home`}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: ' -webkit-fill-available',\r\n                    backgroundColor: 'black',\r\n                }}>\r\n                    <div style={{\r\n                        display: \"grid\"\r\n                    }}>\r\n                        <div style={{\r\n                            display: \"flex\"\r\n                        }}>\r\n                            <h1 style={{\r\n                                color: '#fb4545',\r\n                                fontWeight: 900,\r\n                                fontVariant: 'all-petite-caps',\r\n                                fontSize: 'xxx-large',\r\n                                marginRight: 22,\r\n\r\n                            }}>Live </h1><h1 style={{\r\n                                color: 'aqua',\r\n                                fontWeight: 900,\r\n                                fontVariant: 'all-petite-caps',\r\n                                fontSize: 'xxx-large',\r\n                            }}>Streaming Bata Test</h1></div>\r\n                        <div style={{\r\n                            display: \"contents\"\r\n                        }}>\r\n                            <Button\r\n                                ref={refCreateStreaming}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#000000',\r\n                                    color: 'white',\r\n                                    margin: 15\r\n                                }}\r\n                                startIcon={<VideocamIcon />}\r\n                                onClick={handleClickOpen('create', SlideTransition)}\r\n                            > Create Streaming</Button>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"contents\"\r\n                        }}>\r\n                            <Button\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#000000',\r\n                                    color: 'white',\r\n                                    margin: 15\r\n                                }}\r\n                                onClick={handleClickOpen('join')}\r\n                                startIcon={<GroupAddIcon />}\r\n                            >Join Streaming</Button>\r\n                        </div>\r\n                    </div>\r\n                    <Dialog\r\n                        open={open.create}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"Create key streaming\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                <div style={{\r\n                                    display: \"grid\"\r\n                                }}>\r\n                                    <TextField id=\"key-streaming\" label=\"key\" value={key} onChange={KeyChange} style={{\r\n                                        width: 315\r\n                                    }} />\r\n                                    <Button style={{\r\n                                        margin: '15px 70px'\r\n                                    }} variant=\"contained\" onClick={GenerateKey} color=\"primary\"> generate key</Button>\r\n                                </div>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose('create')} color=\"primary\">\r\n                                Close </Button>\r\n                            <Button onClick={handleClickcCreate('create')} color=\"primary\">\r\n                                Create </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        open={open.join}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"Join key streaming\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                <div style={{\r\n                                    display: \"grid\"\r\n                                }}>\r\n                                    <TextField id=\"key-streaming\" label=\"key\" value={key} onChange={KeyChange} style={{\r\n                                        width: 315\r\n                                    }} />\r\n                                </div>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose('join')} color=\"primary\">\r\n                                Close</Button>\r\n                            <Button onClick={handleClickcCreate('join', SlideTransition)} color=\"primary\">\r\n                                Join</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Snackbar\r\n                        open={err}\r\n                        onClose={handleErrClose}\r\n                        TransitionComponent={transition}\r\n                        message=\"ไม่มี key\"\r\n                    />\r\n                </div>\r\n            </Route>\r\n\r\n            <Route path={`/home/streaming`}>\r\n                <Page />\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '8px',\r\n                    display: 'flex',\r\n                    width: '-webkit-fill-available',\r\n                    justifyContent: 'center',\r\n                    alignItems: \"center\"\r\n                }}>\r\n                    <h3 style={{\r\n\r\n                        marginRight: 10\r\n                    }}>Share: </h3>\r\n                    <FacebookShareButton\r\n                        url={`/home#${key}`}\r\n                        quote=\"Facebook\"\r\n                        className=\"Demo__some-network__share-button\"\r\n                    >\r\n                        <FacebookIcon size={32} round />\r\n                    </FacebookShareButton>\r\n                </div>\r\n            </Route>\r\n\r\n\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Fragment, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport { Home } from '@streaming/pages'\n\nfunction StartPage(props) {\n  const { status } = props;\n  switch (status) {\n    case true:\n      return (<Switch>\n        <Redirect exact from=\"/\" to=\"/home\" />\n        <Route to=\"/home\">\n          <Home />\n        </Route>\n      </Switch>)\n      break;\n    case false:\n      return (\n        <Switch >\n          <Redirect exact from=\"/\" to=\"/login\" />\n          <Route path=\"/login\">\n            {/* <Login /> */}\n          </Route>\n        </Switch>\n      )\n      break;\n    default: return (<Fragment></Fragment>)\n      break;\n  }\n}\n\nfunction App() {\n  const [status, setStatus] = useState(true)\n  return (\n    <Router>\n      <StartPage status={status}/>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}